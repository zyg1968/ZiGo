倒退获取绝对数据保存到数据库
数据库包含两个表，一个是：id, points；另一个是：hash, id, ko, stones, recent0-10
搜索时先查数据库，再查缓存，缓存保存策略网络估计值
搜索可移动数量低于20（？随着数据库数据增大逐渐增大）时使用全树搜索，否则使用MCTS搜索

网络结构：
输入2个特征：盘面和下一步颜色
棋盘最大支持21*21，外围填充[0,0][0,0][1,2][1,2]黑棋+白棋的值变成[2*24*24] 	
输入模块：2*2 卷积，Valid模式，步长为2，变成[64*12*12]	= 2*2*2*64 			= 512
第一层：3个模块[64*12*12]				= 3*(1*16*16+4*4*16*16+1*16*64)	= 6144*3
降维模块：2*2 卷积，Valid模式，步长为2，变成[128*6*6]	= 2*2*64*128			= 32768
第二层：4个模块 [128*6*6]				= 4*(1*32*32+4*4*32*32+1*128*128)= 33792
降维模块：2*2 卷积，Valid模式，步长为2，变成[256*3*3]	= 2*2*128*256			= 131072
第三层：3个模块 [256*3*3]				= 3*(1*64*64+4*4*64*64+1*256*256)= 135186
模块：三个卷积模块，channel/4、channel/4、channel
1*1卷积、4*4卷积、1*1卷积

输出：
策略头：
	1*1*64卷积					= 1*1*256*64			= 16384
	全连接输出	[64*3*3=756]到[21*21+2=443] 	= 756*443			= 334908
价值头：1*1*16卷积					= 1*1*256*16			= 16384
	全连接输出	[16*3*3]到[1]			= 184*1				= 184
										合计：	= 1065778
[256*2*2=1024]到[21*21+2=443]1024*443	= 453632 卷积2*2 Valid模式， 步长1 [256*2*2] 或者1*1卷积变成[128*3*3]	= 2*2*256*256	= 262144  1*1*256*64	= 16384	(或卷积2*2 Valid模式， 步长1 [443*1*1]				= 2*2*256*443	= 453632)	

原来的：10b*128 6b*128
输入：	3*3*2*128			= 2304
resnet		10*2*3*3*128*128	= 2949120	1769472
输出：	策略头：1*128*2	+ 2*19*19*382	= 291084
	价值头：1*128*1+19*19*256+256	= 97920
合计：					= 3340428	2160780